{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Rebbit",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "kkwong125@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "Rebbit",
      "description": "A clone of simple Reddit"
    }
  ],
  "paths": {
    "/user/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "user",
        "operationId": "addUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful"
          },
          "409": {
            "description": "Username not available"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "user",
        "operationId": "addUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          },
          "401": {
            "description": "username or password not correct"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/post": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "get all posts",
        "description": "Return all posts",
        "operationId": "getPostById",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      },
      "post": {
        "tags": [
          "Post"
        ],
        "summary": "create a post",
        "description": "posting",
        "operationId": "addPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created a post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "post created"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/post/{postId}": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "Find post by ID",
        "description": "Returns a single post",
        "operationId": "getPostById",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "tags": [
          "Post"
        ],
        "summary": "Updates a Post",
        "operationId": "updatePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of post that needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "content",
            "in": "body",
            "description": "content of the new post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful updated"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      },
      "delete": {
        "tags": [
          "Post"
        ],
        "summary": "Delete a Post",
        "operationId": "deletePost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of post that needs to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "202": {
            "description": "successful deleted"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/post/vote/{postId}": {
      "put": {
        "tags": [
          "Post"
        ],
        "summary": "Updates a Post vote",
        "operationId": "updatePostVote",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of post that needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful updated the vote"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/comment": {
      "post": {
        "tags": [
          "Comment"
        ],
        "summary": "add comment",
        "description": "adding comment",
        "operationId": "addComment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created comment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful created comment"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/comment/{commentId}": {
      "get": {
        "tags": [
          "Comment"
        ],
        "summary": "add a comment",
        "operationId": "getComment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of comment",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful to get the comment"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "tags": [
          "Comment"
        ],
        "summary": "update a comment",
        "operationId": "updateComment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of comment",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful updated"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      },
      "delete": {
        "tags": [
          "Comment"
        ],
        "summary": "Delete a Comment",
        "operationId": "deleteComment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of post that needs to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "202": {
            "description": "successful deleted"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/comment/vote/{commentId}": {
      "put": {
        "tags": [
          "Comment"
        ],
        "summary": "update a vote comment",
        "operationId": "getVoteComment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of comment",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "202": {
            "description": "successful updated"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/admin": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "get api call record",
        "description": "get api call record",
        "operationId": "get api call record",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Post": {
      "type": "object",
      "properties": {
        "postId": {
          "type": "integer",
          "format": "int64"
        },
        "user_id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "vote": {
          "type": "integer",
          "format": "int64"
        },
        "CreateDate": {
          "type": "string"
        },
        "ModifyDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Post"
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "commentId": {
          "type": "integer",
          "format": "int64"
        },
        "author": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "string"
        },
        "vote": {
          "type": "integer",
          "format": "int64"
        },
        "CreateDate": {
          "type": "string"
        },
        "ModifyDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Comment"
      }
    }
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/erickkkg7/ISA_PROJECT/1.0.0",
  "schemes": [
    "https",
    "http"
  ]
}